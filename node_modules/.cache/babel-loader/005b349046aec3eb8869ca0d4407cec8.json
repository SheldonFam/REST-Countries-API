{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\components\\\\CountryList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Country from \"./Country\";\nimport Loading from \"./Loading\";\nimport { useGlobalContext } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryList = () => {\n  _s();\n\n  const {\n    countries,\n    loading\n  } = useGlobalContext();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (countries.length < 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"no countries matched your search criteria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: countries.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Country, { ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryList, \"hryTpa5X47w021yPJFT3pviBTsI=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = CountryList;\nexport default CountryList; // import React, { useEffect, useState } from \"react\";\n// import Loading from \"./Loading\";\n// const CountryList = () => {\n//   const URL = \"https://restcountries.com/v3.1/\";\n//   const [countries, setCountries] = useState([]);\n//   const [isloading, setIsLoading] = useState(true);\n//   const fetchCountry = async () => {\n//     try {\n//       const response = await fetch(`${URL}/all`);\n//       const data = await response.json();\n//       console.log(data);\n//       setCountries(data);\n//     } catch (error) {\n//       console.log(error);\n//       setIsLoading(false);\n//     }\n//   };\n//   useEffect(() => {\n//     fetchCountry();\n//   }, []);\n//   return countries.map((country, index) => (\n//     <div className=\"country-card\" key={index}>\n//       <div className=\"country-img\">\n//         <img src={country.flags.png} alt=\"\" />\n//       </div>\n//       <div className=\"country-data\">\n//         <h3>{country.name.common}</h3>\n//         <ul>\n//           <li>Population:{country.population}</li>\n//           <li>Region:{country.region}</li>\n//           <li>Capital:{country.capital}</li>\n//         </ul>\n//       </div>\n//     </div>\n//   ));\n// };\n// export default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","Country","Loading","useGlobalContext","CountryList","countries","loading","length","map","item","index"],"sources":["C:/React Project/rest-countries-api/src/components/CountryList.js"],"sourcesContent":["import React from \"react\";\r\nimport Country from \"./Country\";\r\nimport Loading from \"./Loading\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst CountryList = () => {\r\n  const { countries, loading } = useGlobalContext();\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n  if (countries.length < 0) {\r\n    return (\r\n      <h2 className=\"section-title\">\r\n        no countries matched your search criteria\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h2>Country</h2>\r\n      <div className=\"\">\r\n        {countries.map((item, index) => {\r\n          return <Country key={index} {...item} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import Loading from \"./Loading\";\r\n// const CountryList = () => {\r\n//   const URL = \"https://restcountries.com/v3.1/\";\r\n//   const [countries, setCountries] = useState([]);\r\n//   const [isloading, setIsLoading] = useState(true);\r\n\r\n//   const fetchCountry = async () => {\r\n//     try {\r\n//       const response = await fetch(`${URL}/all`);\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       setCountries(data);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCountry();\r\n//   }, []);\r\n\r\n//   return countries.map((country, index) => (\r\n//     <div className=\"country-card\" key={index}>\r\n//       <div className=\"country-img\">\r\n//         <img src={country.flags.png} alt=\"\" />\r\n//       </div>\r\n//       <div className=\"country-data\">\r\n//         <h3>{country.name.common}</h3>\r\n//         <ul>\r\n//           <li>Population:{country.population}</li>\r\n//           <li>Region:{country.region}</li>\r\n//           <li>Capital:{country.capital}</li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   ));\r\n// };\r\n\r\n// export default CountryList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAyBH,gBAAgB,EAA/C;;EAEA,IAAIG,OAAJ,EAAa;IACX,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAID,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;IACxB,oBACE;MAAI,SAAS,EAAC,eAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,EAAf;MAAA,UACGF,SAAS,CAACG,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;QAC9B,oBAAO,QAAC,OAAD,OAAyBD;QAAzB,GAAcC,KAAd;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAxBD;;GAAMN,W;UAC2BD,gB;;;KAD3BC,W;AA0BN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}