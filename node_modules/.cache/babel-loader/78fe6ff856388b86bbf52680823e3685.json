{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\components\\\\CountryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Country from \"./Country\";\nimport Loading from \"./Loading\";\nimport Searchbar from \"./Searchbar\";\nimport FilterCountries from \"./FilterCountries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryList = () => {\n  _s();\n\n  const URL = `https://restcountries.com/v3.1/all`;\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [foundFilter, setFoundFilter] = useState(true);\n  const [filtered, setFiltered] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const fetchCountries = async () => {\n    try {\n      const response = await fetch(URL);\n      const data = await response.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  const searchCountries = searchValue => {\n    setSearchTerm(searchValue);\n\n    if (searchTerm) {\n      const filteredCountries = countries.filter(country => Object.values(country).join(\"\").toLowerCase().includes(searchValue.toLowerCase()));\n      setFiltered(filteredCountries);\n      setFoundFilter(true);\n\n      if (filtered.length <= 0) {\n        setFoundFilter(false);\n      }\n    } else {\n      setFiltered(countries);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Searchbar, {\n      searchCountries: searchCountries,\n      searchTerm: searchTerm,\n      setCountries: setCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), searchTerm.length > 0 ? /*#__PURE__*/_jsxDEV(FilterCountries, {\n      filtered: filtered,\n      foundFilter: foundFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Country, {\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountryList, \"6TvVJNCfiCd7GCa0ApowVkt3x00=\");\n\n_c = CountryList;\nexport default CountryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useState","useEffect","Country","Loading","Searchbar","FilterCountries","CountryList","URL","countries","setCountries","isLoading","setIsLoading","foundFilter","setFoundFilter","filtered","setFiltered","searchTerm","setSearchTerm","fetchCountries","response","fetch","data","json","error","console","log","searchCountries","searchValue","filteredCountries","filter","country","Object","values","join","toLowerCase","includes","length"],"sources":["C:/React Project/rest-countries-api/src/components/CountryList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Country from \"./Country\";\r\nimport Loading from \"./Loading\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport FilterCountries from \"./FilterCountries\";\r\n\r\nconst CountryList = () => {\r\n  const URL = `https://restcountries.com/v3.1/all`;\r\n  const [countries, setCountries] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [foundFilter, setFoundFilter] = useState(true);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const fetchCountries = async () => {\r\n    try {\r\n      const response = await fetch(URL);\r\n      const data = await response.json();\r\n      setCountries(data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const searchCountries = (searchValue) => {\r\n    setSearchTerm(searchValue);\r\n\r\n    if (searchTerm) {\r\n      const filteredCountries = countries.filter((country) =>\r\n        Object.values(country)\r\n          .join(\"\")\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase())\r\n      );\r\n      setFiltered(filteredCountries);\r\n      setFoundFilter(true);\r\n      if (filtered.length <= 0) {\r\n        setFoundFilter(false);\r\n      }\r\n    } else {\r\n      setFiltered(countries);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <Searchbar\r\n          searchCountries={searchCountries}\r\n          searchTerm={searchTerm}\r\n          setCountries={setCountries}\r\n        />\r\n      )}\r\n      {searchTerm.length > 0 ? (\r\n        <FilterCountries filtered={filtered} foundFilter={foundFilter} />\r\n      ) : (\r\n        <Country countries={countries} />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,GAAG,GAAI,oCAAb;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMkB,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;MACA,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAb,YAAY,CAACY,IAAD,CAAZ;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CALD,CAKE,OAAOY,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CATD;;EAWAtB,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;EAEA,MAAMyB,eAAe,GAAIC,WAAD,IAAiB;IACvCV,aAAa,CAACU,WAAD,CAAb;;IAEA,IAAIX,UAAJ,EAAgB;MACd,MAAMY,iBAAiB,GAAGpB,SAAS,CAACqB,MAAV,CAAkBC,OAAD,IACzCC,MAAM,CAACC,MAAP,CAAcF,OAAd,EACGG,IADH,CACQ,EADR,EAEGC,WAFH,GAGGC,QAHH,CAGYR,WAAW,CAACO,WAAZ,EAHZ,CADwB,CAA1B;MAMAnB,WAAW,CAACa,iBAAD,CAAX;MACAf,cAAc,CAAC,IAAD,CAAd;;MACA,IAAIC,QAAQ,CAACsB,MAAT,IAAmB,CAAvB,EAA0B;QACxBvB,cAAc,CAAC,KAAD,CAAd;MACD;IACF,CAZD,MAYO;MACLE,WAAW,CAACP,SAAD,CAAX;IACD;EACF,CAlBD;;EAoBA,oBACE;IAAA,WACGE,SAAS,gBACR,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QADQ,gBAGR,QAAC,SAAD;MACE,eAAe,EAAEgB,eADnB;MAEE,UAAU,EAAEV,UAFd;MAGE,YAAY,EAAEP;IAHhB;MAAA;MAAA;MAAA;IAAA,QAJJ,EAUGO,UAAU,CAACoB,MAAX,GAAoB,CAApB,gBACC,QAAC,eAAD;MAAiB,QAAQ,EAAEtB,QAA3B;MAAqC,WAAW,EAAEF;IAAlD;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC,QAAC,OAAD;MAAS,SAAS,EAAEJ;IAApB;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA3DD;;GAAMF,W;;KAAAA,W;AA6DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}