{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\components\\\\Filterbar.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filterbar = props => {\n  const regions = [{\n    label: \"All\",\n    name: \"all\"\n  }, {\n    label: \"Africa\",\n    name: \"africa\"\n  }, {\n    label: \"Americas\",\n    name: \"americas\"\n  }, {\n    label: \"Asia\",\n    name: \"asia\"\n  }, {\n    label: \"Europe\",\n    name: \"europe\"\n  }, {\n    label: \"Oceania\",\n    name: \"oceania\"\n  }];\n\n  const fetchRegion = async regionName => {\n    if (regionName === \"all\") {\n      const url = `https://restcountries.com/v3.1/all`;\n      const response = await fetch(url);\n      const data = await response.json();\n      props.setCountries(data);\n    } else {\n      const url = `https://restcountries.com/v3.1/region/${regionName}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      props.setCountries(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"Filter By Region\",\n      id: \"\",\n      onChange: () => {\n        fetchRegion(regions.name);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        hidden: true,\n        children: \"Filter by Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region,\n        children: region\n      }, region, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filterbar;\nexport default Filterbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filterbar\");","map":{"version":3,"names":["React","Filterbar","props","regions","label","name","fetchRegion","regionName","url","response","fetch","data","json","setCountries","map","region"],"sources":["C:/React Project/rest-countries-api/src/components/Filterbar.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Filterbar = (props) => {\r\n  const regions = [\r\n    {\r\n      label: \"All\",\r\n      name: \"all\",\r\n    },\r\n    {\r\n      label: \"Africa\",\r\n      name: \"africa\",\r\n    },\r\n    { label: \"Americas\", name: \"americas\" },\r\n    {\r\n      label: \"Asia\",\r\n      name: \"asia\",\r\n    },\r\n    { label: \"Europe\", name: \"europe\" },\r\n    { label: \"Oceania\", name: \"oceania\" },\r\n  ];\r\n\r\n  const fetchRegion = async (regionName) => {\r\n    if (regionName === \"all\") {\r\n      const url = `https://restcountries.com/v3.1/all`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      props.setCountries(data);\r\n    } else {\r\n      const url = `https://restcountries.com/v3.1/region/${regionName}`;\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      props.setCountries(data);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <select\r\n        name=\"Filter By Region\"\r\n        id=\"\"\r\n        onChange={() => {\r\n          fetchRegion(regions.name);\r\n        }}\r\n      >\r\n        <option value=\"none\" hidden={true}>\r\n          Filter by Region\r\n        </option>\r\n        <option value=\"all\">All</option>\r\n        {regions.map((region) => (\r\n          <option key={region} value={region}>\r\n            {region}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filterbar;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,KADT;IAEEC,IAAI,EAAE;EAFR,CADc,EAKd;IACED,KAAK,EAAE,QADT;IAEEC,IAAI,EAAE;EAFR,CALc,EASd;IAAED,KAAK,EAAE,UAAT;IAAqBC,IAAI,EAAE;EAA3B,CATc,EAUd;IACED,KAAK,EAAE,MADT;IAEEC,IAAI,EAAE;EAFR,CAVc,EAcd;IAAED,KAAK,EAAE,QAAT;IAAmBC,IAAI,EAAE;EAAzB,CAdc,EAed;IAAED,KAAK,EAAE,SAAT;IAAoBC,IAAI,EAAE;EAA1B,CAfc,CAAhB;;EAkBA,MAAMC,WAAW,GAAG,MAAOC,UAAP,IAAsB;IACxC,IAAIA,UAAU,KAAK,KAAnB,EAA0B;MACxB,MAAMC,GAAG,GAAI,oCAAb;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;MACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAV,KAAK,CAACW,YAAN,CAAmBF,IAAnB;IACD,CALD,MAKO;MACL,MAAMH,GAAG,GAAI,yCAAwCD,UAAW,EAAhE;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;MACA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAV,KAAK,CAACW,YAAN,CAAmBF,IAAnB;IACD;EACF,CAZD;;EAaA,oBACE;IAAA,uBACE;MACE,IAAI,EAAC,kBADP;MAEE,EAAE,EAAC,EAFL;MAGE,QAAQ,EAAE,MAAM;QACdL,WAAW,CAACH,OAAO,CAACE,IAAT,CAAX;MACD,CALH;MAAA,wBAOE;QAAQ,KAAK,EAAC,MAAd;QAAqB,MAAM,EAAE,IAA7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAUE;QAAQ,KAAK,EAAC,KAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVF,EAWGF,OAAO,CAACW,GAAR,CAAaC,MAAD,iBACX;QAAqB,KAAK,EAAEA,MAA5B;QAAA,UACGA;MADH,GAAaA,MAAb;QAAA;QAAA;QAAA;MAAA,QADD,CAXH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CArDD;;KAAMd,S;AAuDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}