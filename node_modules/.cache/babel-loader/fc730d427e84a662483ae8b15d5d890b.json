{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://restcountries.com/v3.1/all\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const fetchCountry = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(URL);\n      const data = await response.json();\n      console.log(data);\n\n      if (data) {\n        const newCountry = data.map(item => {\n          const {\n            capital,\n            flags,\n            name,\n            population,\n            region\n          } = item;\n          console.log(item);\n          return {\n            name: name.common,\n            img: flags.png,\n            reg: region,\n            cap: capital,\n            pop: population\n          };\n        });\n        setCountries(newCountry);\n      } else {\n        setCountries([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCountry();\n  }, [searchTerm, fetchCountry]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      countries,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"n5hvxwGTcXecUDJ5sfO1SuLuoLI=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","URL","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","countries","setCountries","fetchCountry","response","fetch","data","json","console","log","newCountry","map","item","capital","flags","name","population","region","common","img","png","reg","cap","pop","error","useGlobalContext"],"sources":["C:/React Project/rest-countries-api/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst URL = \"https://restcountries.com/v3.1/all\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const fetchCountry = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(URL);\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      if (data) {\r\n        const newCountry = data.map((item) => {\r\n          const { capital, flags, name, population, region } = item;\r\n          console.log(item);\r\n          return {\r\n            name: name.common,\r\n            img: flags.png,\r\n            reg: region,\r\n            cap: capital,\r\n            pop: population,\r\n          };\r\n        });\r\n        setCountries(newCountry);\r\n      } else {\r\n        setCountries([]);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCountry();\r\n  }, [searchTerm, fetchCountry]);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ loading, countries, setSearchTerm }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,GAAG,GAAG,oCAAZ;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMe,YAAY,GAAGZ,WAAW,CAAC,YAAY;IAC3CO,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;MACA,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;;MAEA,IAAIA,IAAJ,EAAU;QACR,MAAMI,UAAU,GAAGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAU;UACpC,MAAM;YAAEC,OAAF;YAAWC,KAAX;YAAkBC,IAAlB;YAAwBC,UAAxB;YAAoCC;UAApC,IAA+CL,IAArD;UACAJ,OAAO,CAACC,GAAR,CAAYG,IAAZ;UACA,OAAO;YACLG,IAAI,EAAEA,IAAI,CAACG,MADN;YAELC,GAAG,EAAEL,KAAK,CAACM,GAFN;YAGLC,GAAG,EAAEJ,MAHA;YAILK,GAAG,EAAET,OAJA;YAKLU,GAAG,EAAEP;UALA,CAAP;QAOD,CAVkB,CAAnB;QAWAd,YAAY,CAACQ,UAAD,CAAZ;MACD,CAbD,MAaO;QACLR,YAAY,CAAC,EAAD,CAAZ;MACD;;MACDJ,UAAU,CAAC,KAAD,CAAV;IACD,CAtBD,CAsBE,OAAO0B,KAAP,EAAc;MACdhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;MACA1B,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CA5B+B,EA4B7B,EA5B6B,CAAhC;EA8BAR,SAAS,CAAC,MAAM;IACda,YAAY;EACb,CAFQ,EAEN,CAACJ,UAAD,EAAaI,YAAb,CAFM,CAAT;EAIA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAAEN,OAAF;MAAWI,SAAX;MAAsBD;IAAtB,CAA5B;IAAA,UACGJ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5CD,C,CA6CA;;;GA7CMD,W;;KAAAA,W;AA8CN,OAAO,MAAM8B,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMgC,gB;;AAIb,SAAShC,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}