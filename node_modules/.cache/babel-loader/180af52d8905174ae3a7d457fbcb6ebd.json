{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\components\\\\Country.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Country = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.countries.map(_ref => {\n      let {\n        name,\n        population,\n        region,\n        capital,\n        flags,\n        index\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: flags.png,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Population:\", population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Region:\", region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Capital:\", capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","Link","Country","props","countries","map","name","population","region","capital","flags","index","png","common"],"sources":["C:/React Project/rest-countries-api/src/components/Country.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Country = (props) => {\r\n  return (\r\n    <div>\r\n      {props.countries.map(\r\n        ({ name, population, region, capital, flags, index }) => (\r\n          <Link key={index}>\r\n            <div key={index}>\r\n              <div className=\"country-img\">\r\n                <img src={flags.png} alt=\"\" />\r\n              </div>\r\n              <div className=\"country-data\">\r\n                <h3>{name.common}</h3>\r\n                <ul>\r\n                  <li>Population:{population}</li>\r\n                  <li>Region:{region}</li>\r\n                  <li>Capital:{capital}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACzB,oBACE;IAAA,UACGA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CACC;MAAA,IAAC;QAAEC,IAAF;QAAQC,UAAR;QAAoBC,MAApB;QAA4BC,OAA5B;QAAqCC,KAArC;QAA4CC;MAA5C,CAAD;MAAA,oBACE,QAAC,IAAD;QAAA,uBACE;UAAA,wBACE;YAAK,SAAS,EAAC,aAAf;YAAA,uBACE;cAAK,GAAG,EAAED,KAAK,CAACE,GAAhB;cAAqB,GAAG,EAAC;YAAzB;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAA,UAAKN,IAAI,CAACO;YAAV;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,wBACE;gBAAA,0BAAgBN,UAAhB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,sBAAYC,MAAZ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE;gBAAA,uBAAaC,OAAb;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHF;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA,GAAUE,KAAV;UAAA;UAAA;UAAA;QAAA;MADF,GAAWA,KAAX;QAAA;QAAA;QAAA;MAAA,QADF;IAAA,CADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAxBD;;KAAMT,O;AA0BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}