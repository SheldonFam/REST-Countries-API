{"ast":null,"code":"// import React, { useState, useContext, useEffect } from \"react\";\n// import { useCallback } from \"react\";\n// const URL = \"https://restcountries.com/v3.1/all\";\n// const AppContext = React.createContext();\n// const AppProvider = ({ children }) => {\n//   const [loading, setLoading] = useState(true);\n//   const [countries, setCountries] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [foundFilter, setFoundFilter] = useState(true);\n//   const [filtered, setFiltered] = useState([]);\n//   const [select, setSelect] = useState(\"\");\n//   const fetchCountry = useCallback(async () => {\n//     setLoading(true);\n//     try {\n//       const response = await fetch(URL);\n//       const data = await response.json();\n//       console.log(data);\n//       if (data) {\n//         const newCountry = data.map((item) => {\n//           const { capital, flags, name, population, region } = item;\n//           return {\n//             name: name.common,\n//             img: flags.png,\n//             reg: region,\n//             cap: capital,\n//             pop: population,\n//           };\n//         });\n//         setCountries(newCountry);\n//       } else {\n//         setCountries([]);\n//       }\n//       setLoading(false);\n//     } catch (error) {\n//       console.log(error);\n//       setLoading(false);\n//     }\n//   }, []);\n//   useEffect(() => {\n//     fetchCountry();\n//   }, []);\n//   return (\n//     <AppContext.Provider\n//       value={{\n//         loading,\n//         setLoading,\n//         countries,\n//         setCountries,\n//         searchTerm,\n//         setSearchTerm,\n//         select,\n//         setSelect,\n//         foundFilter,\n//         setFoundFilter,\n//         filtered,\n//         setFiltered,\n//       }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n// // make sure use\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n// export { AppContext, AppProvider };","map":{"version":3,"names":[],"sources":["C:/React Project/rest-countries-api/src/context.js"],"sourcesContent":["// import React, { useState, useContext, useEffect } from \"react\";\r\n// import { useCallback } from \"react\";\r\n\r\n// const URL = \"https://restcountries.com/v3.1/all\";\r\n// const AppContext = React.createContext();\r\n\r\n// const AppProvider = ({ children }) => {\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [countries, setCountries] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [foundFilter, setFoundFilter] = useState(true);\r\n//   const [filtered, setFiltered] = useState([]);\r\n//   const [select, setSelect] = useState(\"\");\r\n\r\n//   const fetchCountry = useCallback(async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await fetch(URL);\r\n//       const data = await response.json();\r\n//       console.log(data);\r\n\r\n//       if (data) {\r\n//         const newCountry = data.map((item) => {\r\n//           const { capital, flags, name, population, region } = item;\r\n//           return {\r\n//             name: name.common,\r\n//             img: flags.png,\r\n//             reg: region,\r\n//             cap: capital,\r\n//             pop: population,\r\n//           };\r\n//         });\r\n//         setCountries(newCountry);\r\n//       } else {\r\n//         setCountries([]);\r\n//       }\r\n//       setLoading(false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       setLoading(false);\r\n//     }\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     fetchCountry();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <AppContext.Provider\r\n//       value={{\r\n//         loading,\r\n//         setLoading,\r\n//         countries,\r\n//         setCountries,\r\n//         searchTerm,\r\n//         setSearchTerm,\r\n//         select,\r\n//         setSelect,\r\n//         foundFilter,\r\n//         setFoundFilter,\r\n//         filtered,\r\n//         setFiltered,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </AppContext.Provider>\r\n//   );\r\n// };\r\n// // make sure use\r\n// export const useGlobalContext = () => {\r\n//   return useContext(AppContext);\r\n// };\r\n\r\n// export { AppContext, AppProvider };\r\n"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}