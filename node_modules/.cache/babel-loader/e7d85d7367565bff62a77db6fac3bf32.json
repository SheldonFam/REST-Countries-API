{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState(\"a\");\n  const [countries, setCountries] = useState([]);\n  const fetchCountry = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${URL}${searchTerm}`);\n      const data = await response.json();\n      const {\n        country\n      } = data;\n      console.log(data);\n\n      if (country) {\n        const newCountry = country.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCountries(newCountry);\n      } else {\n        setCountries([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchCountry();\n  }, [searchTerm, fetchCountry]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      countries,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"HgtDCAabV+so4DH81pwoRyottWo=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","URL","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","countries","setCountries","fetchCountry","response","fetch","data","json","country","console","log","newCountry","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","useGlobalContext"],"sources":["C:/React Project/rest-countries-api/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst URL = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"a\");\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const fetchCountry = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${URL}${searchTerm}`);\r\n      const data = await response.json();\r\n      const { country } = data;\r\n      console.log(data);\r\n      if (country) {\r\n        const newCountry = country.map((item) => {\r\n          const { idDrink, strDrink, strDrinkThumb, strAlcoholic, strGlass } =\r\n            item;\r\n          return {\r\n            id: idDrink,\r\n            name: strDrink,\r\n            image: strDrinkThumb,\r\n            info: strAlcoholic,\r\n            glass: strGlass,\r\n          };\r\n        });\r\n        setCountries(newCountry);\r\n      } else {\r\n        setCountries([]);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    fetchCountry();\r\n  }, [searchTerm, fetchCountry]);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ loading, countries, setSearchTerm }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMe,YAAY,GAAGZ,WAAW,CAAC,YAAY;IAC3CO,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;MACA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACA,MAAM;QAAEC;MAAF,IAAcF,IAApB;MACAG,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;MACA,IAAIE,OAAJ,EAAa;QACX,MAAMG,UAAU,GAAGH,OAAO,CAACI,GAAR,CAAaC,IAAD,IAAU;UACvC,MAAM;YAAEC,OAAF;YAAWC,QAAX;YAAqBC,aAArB;YAAoCC,YAApC;YAAkDC;UAAlD,IACJL,IADF;UAEA,OAAO;YACLM,EAAE,EAAEL,OADC;YAELM,IAAI,EAAEL,QAFD;YAGLM,KAAK,EAAEL,aAHF;YAILM,IAAI,EAAEL,YAJD;YAKLM,KAAK,EAAEL;UALF,CAAP;QAOD,CAVkB,CAAnB;QAWAhB,YAAY,CAACS,UAAD,CAAZ;MACD,CAbD,MAaO;QACLT,YAAY,CAAC,EAAD,CAAZ;MACD;;MACDJ,UAAU,CAAC,KAAD,CAAV;IACD,CAtBD,CAsBE,OAAO0B,KAAP,EAAc;MACdf,OAAO,CAACC,GAAR,CAAYc,KAAZ;MACA1B,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CA5B+B,EA4B7B,CAACC,UAAD,CA5B6B,CAAhC;EA8BAT,SAAS,CAAC,MAAM;IACda,YAAY;EACb,CAFQ,EAEN,CAACJ,UAAD,EAAaI,YAAb,CAFM,CAAT;EAIA,oBACE,QAAC,UAAD,CAAY,QAAZ;IAAqB,KAAK,EAAE;MAAEN,OAAF;MAAWI,SAAX;MAAsBD;IAAtB,CAA5B;IAAA,UACGJ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA5CD,C,CA6CA;;;GA7CMD,W;;KAAAA,W;AA8CN,OAAO,MAAM8B,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMgC,gB;;AAIb,SAAShC,UAAT,EAAqBE,WAArB"},"metadata":{},"sourceType":"module"}