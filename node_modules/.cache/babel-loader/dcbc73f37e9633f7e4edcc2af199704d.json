{"ast":null,"code":"// import React, { useContext, useEffect, useState } from \"react\";\n// import { Link, useParams } from \"react-router-dom\";\n// import { AppContext } from \"../context\";\n// import Loading from \"../components/Loading\";\n// const SingleCountry = () => {\n//   const countryList = [];\n//   const [Allcountry] = useContext(AppContext);\n//   const params = useParams();\n//   const currentCountry = params.country.replace(\"country-\", \"\");\n//   const empty = \"Error\";\n//   const url = `https://restcountries.com/v3.1/name/${currentCountry}`;\n//   const [countries, setCountries] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [country, setcountry] = useState([]);\n//   useEffect(() => {\n//     fetch(URL, {\n//       method: \"GET\",\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         console.log(data);\n//         const sortedCountry = data;\n//         setCountries(sortedCountry);\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   }, []);\n//   return !loading ? (\n//     <Loading />\n//   ) : (\n//     country.map((country) => <CountryDetail {...country} />)\n//   );\n// };\n// export default SingleCountry;\n// const CountryDetail = ({\n//   name: { common },\n//   flags,\n//   capital,\n//   population,\n//   region,\n//   subregion,\n//   languages,\n//   currencies,\n//   nativeName,\n//   borders,\n//   topLevelDomain,\n// }) => {\n//   const empty = \"unknown\";\n//   return (\n//     <div className=\"info-container\">\n//       <Link to=\"/\">\n//         <button>Back</button>\n//       </Link>\n//       <div className=\"country-detail-container\">\n//         <div className=\"country-frag\">\n//           <img src={flags.png} />\n//         </div>\n//         <div className=\"country-detail\">\n//           <h3>{nativeName}</h3>\n//           <div className=\"detail\">\n//             <div className=\"data\">\n//               <h4>\n//                 Native Name : <span>{nativeName}</span>\n//               </h4>\n//               <h4>\n//                 Population : <span>{population}</span>\n//               </h4>\n//               <h4>\n//                 Region : <span>{region}</span>\n//               </h4>\n//               <h4>\n//                 Sub Region : <span>{subregion}</span>\n//               </h4>\n//               <h4>\n//                 Capital: <span>{capital || \"\"}</span>\n//               </h4>\n//             </div>\n//             <div className=\"data\">\n//               <h4>\n//                 Top Level Domain : <span>{topLevelDomain}</span>\n//               </h4>\n//               <h4>\n//                 Curriencies :{\" \"}\n//                 <span>\n//                   {currencies\n//                     ? currencies\n//                         .map(\n//                           (currency) =>\n//                             `${currency.name} ( ${currency.symbol} )`\n//                         )\n//                         .join(\", \")\n//                     : \"not provided!\"}\n//                 </span>\n//               </h4>\n//               <h4>\n//                 Languages :{\" \"}\n//                 <span>{languages.map((language) => language.name)}</span>\n//               </h4>\n//             </div>\n//           </div>\n//           <div className=\"country-border \">\n//             <h3>Border Countries: </h3>\n//             <div className=\"country-border-button\">\n//               {borders\n//                 ? borders.map((border) => (\n//                     <button style={{ cursor: \"initial\" }}>{border}</button>\n//                   ))\n//                 : \"No border country.\"}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"names":[],"sources":["C:/React Project/rest-countries-api/src/pages/SingleCountry.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from \"react\";\r\n// import { Link, useParams } from \"react-router-dom\";\r\n// import { AppContext } from \"../context\";\r\n// import Loading from \"../components/Loading\";\r\n\r\n// const SingleCountry = () => {\r\n//   const countryList = [];\r\n//   const [Allcountry] = useContext(AppContext);\r\n//   const params = useParams();\r\n//   const currentCountry = params.country.replace(\"country-\", \"\");\r\n//   const empty = \"Error\";\r\n//   const url = `https://restcountries.com/v3.1/name/${currentCountry}`;\r\n//   const [countries, setCountries] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [country, setcountry] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(URL, {\r\n//       method: \"GET\",\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         console.log(data);\r\n//         const sortedCountry = data;\r\n//         setCountries(sortedCountry);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return !loading ? (\r\n//     <Loading />\r\n//   ) : (\r\n//     country.map((country) => <CountryDetail {...country} />)\r\n//   );\r\n// };\r\n\r\n// export default SingleCountry;\r\n\r\n// const CountryDetail = ({\r\n//   name: { common },\r\n//   flags,\r\n//   capital,\r\n//   population,\r\n//   region,\r\n//   subregion,\r\n//   languages,\r\n//   currencies,\r\n//   nativeName,\r\n//   borders,\r\n//   topLevelDomain,\r\n// }) => {\r\n//   const empty = \"unknown\";\r\n\r\n//   return (\r\n//     <div className=\"info-container\">\r\n//       <Link to=\"/\">\r\n//         <button>Back</button>\r\n//       </Link>\r\n//       <div className=\"country-detail-container\">\r\n//         <div className=\"country-frag\">\r\n//           <img src={flags.png} />\r\n//         </div>\r\n//         <div className=\"country-detail\">\r\n//           <h3>{nativeName}</h3>\r\n//           <div className=\"detail\">\r\n//             <div className=\"data\">\r\n//               <h4>\r\n//                 Native Name : <span>{nativeName}</span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Population : <span>{population}</span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Region : <span>{region}</span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Sub Region : <span>{subregion}</span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Capital: <span>{capital || \"\"}</span>\r\n//               </h4>\r\n//             </div>\r\n//             <div className=\"data\">\r\n//               <h4>\r\n//                 Top Level Domain : <span>{topLevelDomain}</span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Curriencies :{\" \"}\r\n//                 <span>\r\n//                   {currencies\r\n//                     ? currencies\r\n//                         .map(\r\n//                           (currency) =>\r\n//                             `${currency.name} ( ${currency.symbol} )`\r\n//                         )\r\n//                         .join(\", \")\r\n//                     : \"not provided!\"}\r\n//                 </span>\r\n//               </h4>\r\n//               <h4>\r\n//                 Languages :{\" \"}\r\n//                 <span>{languages.map((language) => language.name)}</span>\r\n//               </h4>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"country-border \">\r\n//             <h3>Border Countries: </h3>\r\n\r\n//             <div className=\"country-border-button\">\r\n//               {borders\r\n//                 ? borders.map((border) => (\r\n//                     <button style={{ cursor: \"initial\" }}>{border}</button>\r\n//                   ))\r\n//                 : \"No border country.\"}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n"],"mappings},"metadata":{},"sourceType":"module"}