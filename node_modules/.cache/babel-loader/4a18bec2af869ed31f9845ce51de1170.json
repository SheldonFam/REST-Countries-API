{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Project\\\\rest-countries-api\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s();\n\n  const URL = \"https://restcountries.com/v3.1/\";\n  const [countries, setCountries] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchCountry = async () => {\n    try {\n      const response = await fetch(`${URL}/all`);\n      const data = await response.json();\n      console.log(data);\n      setCountries(data);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchCountry();\n  }, []);\n  return countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flags.png,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Population:\", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Region:\", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Capital:\", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n};\n\n_s(Card, \"frTrcJTr6nl3EAerHbdpuWDmYhg=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","Card","URL","countries","setCountries","loading","setLoading","fetchCountry","response","fetch","data","json","console","log","error","map","country","index","flags","png","name","common","population","region","capital"],"sources":["C:/React Project/rest-countries-api/src/components/Card.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Card = () => {\r\n  const URL = \"https://restcountries.com/v3.1/\";\r\n\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchCountry = async () => {\r\n    try {\r\n      const response = await fetch(`${URL}/all`);\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setCountries(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountry();\r\n  }, []);\r\n\r\n  return countries.map((country, index) => (\r\n    <div>\r\n      {loading && <h4>Loading...</h4>}\r\n      <div className=\"country-card\" key={index}>\r\n        <div className=\"country-img\">\r\n          <img src={country.flags.png} alt=\"\" />\r\n        </div>\r\n        <div className=\"country-data\">\r\n          <h3>{country.name.common}</h3>\r\n          <ul>\r\n            <li>Population:{country.population}</li>\r\n            <li>Region:{country.region}</li>\r\n            <li>Capital:{country.capital}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,GAAG,GAAG,iCAAZ;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;;EAEA,MAAMO,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,MAAR,CAA5B;MACA,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACAN,YAAY,CAACM,IAAD,CAAZ;IACD,CALD,CAKE,OAAOI,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACAR,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CAVD;;EAYAP,SAAS,CAAC,MAAM;IACdQ,YAAY;EACb,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAOJ,SAAS,CAACY,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,kBACnB;IAAA,WACGZ,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADd,eAEE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE;UAAK,GAAG,EAAEW,OAAO,CAACE,KAAR,CAAcC,GAAxB;UAA6B,GAAG,EAAC;QAAjC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE;UAAA,UAAKH,OAAO,CAACI,IAAR,CAAaC;QAAlB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,wBACE;YAAA,0BAAgBL,OAAO,CAACM,UAAxB;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,sBAAYN,OAAO,CAACO,MAApB;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,uBAAaP,OAAO,CAACQ,OAArB;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA,GAAmCP,KAAnC;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADK,CAAP;AAkBD,CAxCD;;GAAMhB,I;;KAAAA,I;AA0CN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}